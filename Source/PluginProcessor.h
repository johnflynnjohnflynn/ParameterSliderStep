/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"


//==============================================================================
/**
*/
class AudioProcessorParameterPluginAudioProcessor  : public AudioProcessor
{
public:
    //==============================================================================
    AudioProcessorParameterPluginAudioProcessor();
    ~AudioProcessorParameterPluginAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override                   { return true; }

    //==============================================================================
    const String getName() const override             { return JucePlugin_Name; }

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    double getTailLengthSeconds() const override      { return 0.0; }

    //==============================================================================
    int getNumPrograms() override                            { return 1; }
    int getCurrentProgram() override                         { return 0; }
    void setCurrentProgram (int /*index*/) override          { }
    const String getProgramName (int /*index*/) override     { return String(); }
    void changeProgramName (int /*index*/, const String& /*newName*/) override { }

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

private:
    AudioParameterBool*  boolParam_;    // Raw pointers here. Processor's
    AudioParameterFloat* floatParam_;   // managedParameters OwnedArray
    AudioParameterInt*   intParam_;     // owns and manages. (See xtor.)

    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (AudioProcessorParameterPluginAudioProcessor)
};


namespace NonMember // Some helper functions that don't need to be inside the processor
{

void printParams(const AudioProcessor& processor); // for debugging

} // namespace NonMember


#endif  // PLUGINPROCESSOR_H_INCLUDED
